"""initial

Revision ID: 917227cafdef
Revises: 
Create Date: 2023-10-04 14:31:52.891555

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '917227cafdef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pdfdocument')
    op.drop_table('document')
    op.drop_index('ix_User_Email', table_name='User')
    op.drop_table('User')
    op.drop_index('ix_ExistingApplication_ExistingApplicationId', table_name='ExistingApplication')
    op.drop_table('ExistingApplication')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ExistingApplication',
    sa.Column('ExistingApplicationId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('Description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('URL', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Icon', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('RatingCount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('ExistingApplicationId', name='ExistingApplication_pkey')
    )
    op.create_index('ix_ExistingApplication_ExistingApplicationId', 'ExistingApplication', ['ExistingApplicationId'], unique=False)
    op.create_table('User',
    sa.Column('UserId', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('FirstName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('Initial', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('FirstLastName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('SecondLastName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('EncryptedPassword', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('Salt', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ProfileImageUrl', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('UserId', name='User_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_User_Email', 'User', ['Email'], unique=False)
    op.create_table('document',
    sa.Column('docId', sa.INTEGER(), server_default=sa.text('nextval(\'"document_docId_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('filetype', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('lastModified', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('userId', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['User.UserId'], name='document_userId_fkey'),
    sa.PrimaryKeyConstraint('docId', name='document_pkey')
    )
    op.create_table('pdfdocument',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pdf_data', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pdfdocument_pkey')
    )
    # ### end Alembic commands ###
